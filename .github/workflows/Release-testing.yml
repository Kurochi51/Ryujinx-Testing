on:
  workflow_dispatch:
    inputs: {}
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/*'
      - '.github/ISSUE_TEMPLATE/**'
      - '*.yml'
      - 'README.md'

name: Release

env:
  POWERSHELL_TELEMETRY_OPTOUT: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  RYUJINX_BASE_VERSION: "1.1"
  RYUJINX_TARGET_RELEASE_CHANNEL_NAME: "main"
  RYUJINX_TARGET_RELEASE_CHANNEL_OWNER: "Kurochi51"
  RYUJINX_TARGET_RELEASE_CHANNEL_REPO: "Ryujinx-Testing"

jobs:
    tag:
      name: Create tag
      runs-on: ubuntu-latest
      steps:
        - name: Get version info
          id: version_info
          run: |
            echo "build_version=${{ env.RYUJINX_BASE_VERSION }}.0${{ github.run_number }}" >> $GITHUB_OUTPUT
          shell: bash

        - name: Create tag
          uses: actions/github-script@v6
          with:
            script: |
              github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/tags/${{ steps.version_info.outputs.build_version }}',
                sha: context.sha
              })

    windows:
        name: Release Windows x64
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v3
            
            - uses: actions/setup-dotnet@v3
              with:
                global-json-file: global.json
                
            - name: Get git short hash
              id: git_short_hash
              run: echo "result=$(git rev-parse --short "${{ github.sha }}")" >> $GITHUB_OUTPUT
              shell: bash
              
            - name: Get version info
              id: version_info
              run: |
                echo "build_version=${{ env.RYUJINX_BASE_VERSION }}.0${{ github.run_number }}" >> $GITHUB_OUTPUT
                echo "git_short_hash=$(git rev-parse --short "${{ github.sha }}")" >> $GITHUB_OUTPUT
              shell: bash
              
            - name: Configure for release
              run: |
                sed -r --in-place 's/\%\%RYUJINX_BUILD_VERSION\%\%/${{ steps.version_info.outputs.build_version }}/g;' src/Ryujinx.Common/ReleaseInformation.cs
                sed -r --in-place 's/\%\%RYUJINX_BUILD_GIT_HASH\%\%/${{ steps.version_info.outputs.git_short_hash }}/g;' src/Ryujinx.Common/ReleaseInformation.cs
                sed -r --in-place 's/\%\%RYUJINX_TARGET_RELEASE_CHANNEL_NAME\%\%/${{ env.RYUJINX_TARGET_RELEASE_CHANNEL_NAME }}/g;' src/Ryujinx.Common/ReleaseInformation.cs
                sed -r --in-place 's/\%\%RYUJINX_TARGET_RELEASE_CHANNEL_OWNER\%\%/${{ env.RYUJINX_TARGET_RELEASE_CHANNEL_OWNER }}/g;' src/Ryujinx.Common/ReleaseInformation.cs
                sed -r --in-place 's/\%\%RYUJINX_TARGET_RELEASE_CHANNEL_REPO\%\%/${{ env.RYUJINX_TARGET_RELEASE_CHANNEL_REPO }}/g;' src/Ryujinx.Common/ReleaseInformation.cs
              shell: bash

            - name: Create output dir
              run: "mkdir release_output"
              
            - name: Publish Ryujinx GTK
              run: |
                dotnet publish -c Release -r win10-x64 -o ./publish_gtk/publish -p:Version="${{ steps.version_info.outputs.build_version }}" -p:SourceRevisionId="${{ steps.version_info.outputs.git_short_hash }}" src/Ryujinx --self-contained true
              
            - name: Packing Windows GTK build
              run: |
                pushd publish_gtk
                7z a ../release_output/ryujinx-${{ steps.version_info.outputs.build_version }}-win_x64.zip publish
                popd
              shell: bash
              
            - name: Publish Ryujinx Ava
              run: |
                dotnet publish -c Release -r win10-x64 -o ./publish_ava/publish -p:Version="${{ steps.version_info.outputs.build_version }}" -p:SourceRevisionId="${{ steps.version_info.outputs.git_short_hash }}" src/Ryujinx.Ava --self-contained true
                
            - name: Packing Windows Ava build
              run: |
                pushd publish_ava
                7z a ../release_output/test-ava-ryujinx-${{ steps.version_info.outputs.build_version }}-win_x64.zip publish
                popd
              shell: bash
              
            - name: Pushing new release
              uses: ncipollo/release-action@v1.12.0
              with:
                name: ${{ steps.version_info.outputs.build_version }}
                artifacts: "./release_output/*.zip"
                tag: ${{ steps.version_info.outputs.build_version }}
                body: "Are you lost? This is no place to be in."
                omitBodyDuringUpdate: true
                allowUpdates: true
                replacesArtifacts: true
                owner: ${{ env.RYUJINX_TARGET_RELEASE_CHANNEL_OWNER }}
                repo: ${{ env.RYUJINX_TARGET_RELEASE_CHANNEL_REPO }}
                token: ${{ secrets.RELEASE_TOKEN }}
